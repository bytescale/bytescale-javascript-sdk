/* tslint:disable */
/* eslint-disable */
/**
 * @bytescale/api
 * Bytescale API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@bytescale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import * as runtime from "../runtime";
import type {
  // @ts-ignore
  AsyncResponse,
  // @ts-ignore
  ErrorResponse,
  // @ts-ignore
  ResetCacheRequest
} from "../models";

// Omitted by generator (so we add manually).
// @ts-ignore
import type { TransformationParams } from "../models";

export interface ResetCacheOperationParams {
  accountId: string;

  resetCacheRequest: ResetCacheRequest;
}

export class CacheApi extends runtime.BaseAPI {
  /**
   * Resets the Bytescale CDN cache for a specific path, path prefix, or for your entire account.  You can choose to reset the edge cache, or permanent cache, or both caches.  *Warning:* Resetting the permanent cache (by setting ```resetPermanentCache: true```) may lead to a significant increase in processing time if numerous file transformations need to be re-performed upon their next request.  *Recommended:* Prevent cache resets by adding a ```?v=<etag>``` querystring parameter to your URLs. This ensures your URLs change when your files change, eliminating the need for cache resets. The `etag` field is returned by GetFileDetails and all upload operations, and can be saved to your database.  *Example patterns:*  - ```\"/_*\"``` - ```\"/raw/example.jpg\"``` - ```\"/image/example.jpg\"``` - ```\"/image/customers/abc/_*\"```  You may only use ```*``` at the end of the pattern. You must not include your account ID prefix in the pattern.
   */
  async resetCache(params: ResetCacheOperationParams): Promise<AsyncResponse> {
    const query: any = {};
    const headers: runtime.HTTPHeaders = {};

    headers["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/v2/accounts/{accountId}/cache/reset`.replace(
          `{${"accountId"}}`,
          // @ts-ignore
          this.encodePathParam("accountId", params.accountId)
        ),
        method: "POST",
        headers,
        query,
        body: params.resetCacheRequest
      },
      undefined,
      [][0]
    );

    return await new runtime.JSONApiResponse<AsyncResponse>(response).value();
  }
}
