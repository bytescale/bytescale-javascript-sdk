/* tslint:disable */
/* eslint-disable */
/**
 * @bytescale/api
 * Bytescale API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@bytescale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import * as runtime from "../runtime";
import type {
  // @ts-ignore
  AccountJobType,
  // @ts-ignore
  ErrorResponse,
  // @ts-ignore
  JobSummary,
  // @ts-ignore
  ListRecentJobsResponse
} from "../models";

// Omitted by generator (so we add manually).
// @ts-ignore
import type { ProcessFileTransformationParamsParameter } from "../models";

export interface CancelJobParams {
  accountId: string;

  jobId: string;

  jobType: AccountJobType;
}

export interface GetJobParams {
  accountId: string;

  jobId: string;

  jobType: AccountJobType;
}

export interface ListRecentJobsParams {
  accountId: string;

  jobType: Array<AccountJobType>;
}

export class JobApi extends runtime.BaseAPI {
  /**
   * Cancels an in-progress background job.  Requires a `secret_*` API key.
   */
  async cancelJob(params: CancelJobParams): Promise<void> {
    const query: any = {};
    const headers: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/v2/accounts/{accountId}/jobs/{jobType}/{jobId}`
          .replace(
            `{${"accountId"}}`,
            // @ts-ignore
            this.encodeParam("accountId", params.accountId)
          )
          .replace(
            `{${"jobId"}}`,
            // @ts-ignore
            this.encodeParam("jobId", params.jobId)
          )
          .replace(
            `{${"jobType"}}`,
            // @ts-ignore
            this.encodeParam("jobType", params.jobType)
          ),
        method: "DELETE",
        headers,
        query
      },
      undefined,
      [][0]
    );

    return await new runtime.VoidApiResponse(response).value();
  }

  /**
   * Gets information on a background job.  Requires a `secret_*` API key.
   */
  async getJob(params: GetJobParams): Promise<JobSummary> {
    const query: any = {};
    const headers: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/v2/accounts/{accountId}/jobs/{jobType}/{jobId}`
          .replace(
            `{${"accountId"}}`,
            // @ts-ignore
            this.encodeParam("accountId", params.accountId)
          )
          .replace(
            `{${"jobId"}}`,
            // @ts-ignore
            this.encodeParam("jobId", params.jobId)
          )
          .replace(
            `{${"jobType"}}`,
            // @ts-ignore
            this.encodeParam("jobType", params.jobType)
          ),
        method: "GET",
        headers,
        query
      },
      undefined,
      [][0]
    );

    return await new runtime.JSONApiResponse<JobSummary>(response).value();
  }

  /**
   * Lists the most recently issued background jobs.  Requires a `secret_*` API key.
   */
  async listRecentJobs(params: ListRecentJobsParams): Promise<ListRecentJobsResponse> {
    const query: any = {};
    if (params.jobType) {
      query["jobType"] = params.jobType;
    }

    const headers: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/v2/accounts/{accountId}/jobs`.replace(
          `{${"accountId"}}`,
          // @ts-ignore
          this.encodeParam("accountId", params.accountId)
        ),
        method: "GET",
        headers,
        query
      },
      undefined,
      [][0]
    );

    return await new runtime.JSONApiResponse<ListRecentJobsResponse>(response).value();
  }
}
